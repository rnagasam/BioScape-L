CS 694 Final Project
--------------------

Attempt at an implementation of a (simplified) version of
BioScape^L [1].


Notes
-----

Erlang repr (pi-calculus):

    TERM ::= { null }
           | { send, Chan, Msg, TERM }
           | { recv, Chan, Msg, TERM }
           | { new, Chan, TERM }
           | { spawn, [ TERM ] }
           | { repeat, TERM }


BioScape^L abstract syntax

    P, Q ::= 0                                         empty process
           | X(d)_d                          located entity instance
           | P | Q                              parallel composition
           | (va@d,d:chan{T}).P                          restriction

    M ::= pi.P [+ M]                      choice of prefixed process

    pi ::= delay@r                                             delay
         | !u(d)                                              output
         | ?u(x)                                               input
         | mov                                                  move

    N ::= M | (va@d,d:chan{T}).N                   restricted choice

    u ::= a | b | ... | x | y | ...                      identifiers

    d ::= u | c | this | d1,...,dn | () | d.i | op(d)    expressions

    v ::= a | b | ... | c | () | v1,...,vn         expression values

    T ::= chan{T} | fl | T1 x ... x Tn | Top         expresion types

    D ::= 0 | D,X(x:T) = N^{geom}                 entity definitions

    E ::= 0 | E,a@r,rad:chan{T}                 channel declarations

    G ::= 0 | G,X:T | G,u:T                         type environment


References
----------

[1] Compagnoni, Adriana et al. “A Calculus of Located Entities.”
Electronic Proceedings in Theoretical Computer Science 144 (2014):
41–56. Crossref. Web.
